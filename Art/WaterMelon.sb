' Water Melon
' 2012-09-18 15:43:25 Generated by Shapes 1.12
' 2012-09-08 20:42:17 Generated by Shapes Editor 0.3
' Program ID HFT126

' initialize shapes
Shapes_Init()
' add shapes
scale = 1
Shapes_Add()
angle = 0

Sub Shapes_Init
  ' Shapes | Initialize shapes data
  ' return shX, shY - current position of shapes
  ' return shape - array of shapes
  shX = 173 ' x offset
  shY = 66 ' y offset
  shape = ""
  shape[1] = "func=ell;x=9;y=13;width=221;height=228;bc=#BCE19D;pc=#001500;pw=2;"
  shape[2] = "func=ell;x=14;y=16;width=212;height=219;bc=#BD0000;pc=#DEFFA8;pw=2;"
  shape[3] = "func=ell;x=75;y=84;width=15;height=9;angle=53;bc=#000000;pc=#420000;pw=2;"
  shape[4] = "func=ell;x=119;y=82;width=8;height=16;bc=#000000;pc=#420000;pw=2;"
  shape[5] = "func=ell;x=121;y=175;width=8;height=17;bc=#000000;pc=#420000;pw=2;"
  shape[6] = "func=ell;x=165;y=137;width=13;height=7;angle=28;bc=#000000;pc=#420000;pw=2;"
  shape[7] = "func=ell;x=77;y=55;width=6;height=14;angle=330;bc=#000000;pc=#420000;pw=2;"
  shape[8] = "func=ell;x=53;y=150;width=13;height=7;angle=332;bc=#000000;pc=#420000;pw=2;"
  shape[9] = "func=ell;x=136;y=61;width=8;height=16;angle=12;bc=#000000;pc=#420000;pw=2;"
  shape[10] = "func=ell;x=95;y=102;width=8;height=16;angle=314;bc=#000000;pc=#420000;pw=2;"
  shape[11] = "func=ell;x=149;y=109;width=8;height=16;angle=68;bc=#000000;pc=#420000;pw=2;"
  shape[12] = "func=ell;x=142;y=145;width=8;height=16;angle=138;bc=#000000;pc=#420000;pw=2;"
  shape[13] = "func=ell;x=65;y=128;width=8;height=16;angle=259;bc=#000000;pc=#420000;pw=2;"
  shape[14] = "func=ell;x=181;y=91;width=8;height=16;angle=60;bc=#000000;pc=#420000;pw=2;"
  shape[15] = "func=ell;x=85;y=168;width=8;height=16;angle=29;bc=#000000;pc=#420000;pw=2;"
  shape[16] = "func=ell;x=109;y=144;width=8;height=16;angle=14;bc=#000000;pc=#420000;pw=2;"
  shape[17] = "func=ell;x=157;y=69;width=8;height=16;angle=38;bc=#000000;pc=#420000;pw=2;"
  shape[18] = "func=ell;x=153;y=177;width=8;height=16;angle=152;bc=#000000;pc=#420000;pw=2;"
  shape[19] = "func=ell;x=48;y=108;width=6;height=14;angle=286;bc=#000000;pc=#420000;pw=2;"
  shape[20] = "func=ell;x=123;y=51;width=6;height=14;bc=#000000;pc=#420000;pw=2;"
  shape[21] = "func=ell;x=114;y=97;width=6;height=14;angle=340;bc=#000000;pc=#420000;pw=2;"
  shape[22] = "func=ell;x=134;y=104;width=6;height=14;angle=47;bc=#000000;pc=#420000;pw=2;"
  shape[23] = "func=ell;x=100;y=137;width=6;height=14;angle=217;bc=#000000;pc=#420000;pw=2;"
  shape[24] = "func=ell;x=163;y=93;width=6;height=14;angle=59;bc=#000000;pc=#420000;pw=2;"
  shape[25] = "func=ell;x=175;y=153;width=6;height=14;angle=112;bc=#000000;pc=#420000;pw=2;"
  shape[26] = "func=ell;x=83;y=145;width=6;height=14;angle=230;bc=#000000;pc=#420000;pw=2;"
  shape[27] = "func=ell;x=58;y=74;width=6;height=14;angle=312;bc=#000000;pc=#420000;pw=2;"
  shape[28] = "func=ell;x=97;y=192;width=6;height=14;angle=198;bc=#000000;pc=#420000;pw=2;"
  shape[29] = "func=rect;x=0;y=0;width=240;height=130;bc=#FFFFFF;pw=0;"
EndSub

Sub Shapes_Add
  ' Shapes | Add shapes as shapes data
  ' param shape - array of shapes
  ' param scale - to zoom
  ' return nShapes - number of shapes
  ' return shAngle - current angle of shapes
  Stack.PushValue("local", i)
  Stack.PushValue("local", x)
  Stack.PushValue("local", y)
  nShapes = Array.GetItemCount(shape)
  s = scale
  For i = 1 To nShapes
    GraphicsWindow.PenWidth = shape[i]["pw"] * s
    If shape[i]["pw"] > 0 Then
      GraphicsWindow.PenColor = shape[i]["pc"]
    EndIf
    If shape[i]["func"] = "rect" Then
      GraphicsWindow.BrushColor = shape[i]["bc"]
      x = shape[i]["x"]
      y = shape[i]["y"]
      width = shape[i]["width"]
      height = shape[i]["height"]
      shape[i]["obj"] = Shapes.AddRectangle(width * s, height * s)
      Shapes.Move(shape[i]["obj"], shX + x * s, shY + y * s)
      If shape[i]["angle"] <> 0 Then
        Shapes.Rotate(shape[i]["obj"], shape[i]["angle"])
      EndIf
    ElseIf shape[i]["func"] = "ell" Then
      GraphicsWindow.BrushColor = shape[i]["bc"]
      x = shape[i]["x"]
      y = shape[i]["y"]
      width = shape[i]["width"]
      height = shape[i]["height"]
      shape[i]["obj"] = Shapes.AddEllipse(width * s, height * s)
      Shapes.Move(shape[i]["obj"], shX + x * s, shY + y * s)
      If shape[i]["angle"] <> 0 Then
        Shapes.Rotate(shape[i]["obj"], shape[i]["angle"])
      EndIf
    ElseIf shape[i]["func"] = "tri" Then
      GraphicsWindow.BrushColor = shape[i]["bc"]
      x = shape[i]["x"]
      y = shape[i]["y"]
      x1 = shape[i]["x1"]
      y1 = shape[i]["y1"]
      x2 = shape[i]["x2"]
      y2 = shape[i]["y2"]
      x3 = shape[i]["x3"]
      y3 = shape[i]["y3"]
      shape[i]["obj"] = Shapes.AddTriangle(x1 * s, y1 * s, x2 * s, y2 * s, x3 * s, y3 * s)
      Shapes.Move(shape[i]["obj"], shX + x * s, shY + y * s)
      If shape[i]["angle"] <> 0 Then
        Shapes.Rotate(shape[i]["obj"], shape[i]["angle"])
      EndIf
    ElseIf shape[i]["func"] = "line" Then
      x = shape[i]["x"]
      y = shape[i]["y"]
      x1 = shape[i]["x1"]
      y1 = shape[i]["y1"]
      x2 = shape[i]["x2"]
      y2 = shape[i]["y2"]
      shape[i]["obj"] = Shapes.AddLine(x1 * s, y1 * s, x2 * s, y2 * s)
      Shapes.Move(shape[i]["obj"], shX + x * s, shY + y * s)
    EndIf
    shape[i]["rx"] = x
    shape[i]["ry"] = y
  EndFor
  shAngle = 0
  y = Stack.PopValue("local")
  x = Stack.PopValue("local")
  i = Stack.PopValue("local")
EndSub
