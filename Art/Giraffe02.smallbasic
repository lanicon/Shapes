' Giraffe 0.2
' Copyright (c) 2012 Nonki Takahashi.  All rights reserved.
'
' History :
'  0.2 2012/09/19 1:13:57 Generated by Shapes Converter 0.2.
'  0.1 2012/09/06 Created.
'
' initialize shapes
Shapes_Init()
' add shapes
scale = 1
Shapes_Add()
angle = 0

Sub Shapes_Init
  ' Shapes | Initialize shapes data
  ' return shX, shY - current position of shapes
  ' return shape - array of shapes
  shX = 200 ' x offset
  shY = 20 ' y offset
  shape = ""
  shape[1] = "func=rect;x=60;y=51;width=44;height=194;bc=#FFCC66;pc=#000000;pw=2;"
  shape[2] = "func=rect;x=63;y=291;width=12;height=114;bc=#FFCC66;pc=#000000;pw=2;"
  shape[3] = "func=rect;x=93;y=292;width=11;height=113;bc=#FFCC66;pc=#000000;pw=2;"
  shape[4] = "func=rect;x=177;y=291;width=9;height=115;bc=#FFCC66;pc=#000000;pw=2;"
  shape[5] = "func=rect;x=200;y=292;width=12;height=113;bc=#FFCC66;pc=#000000;pw=2;"
  shape[6] = "func=rect;x=0;y=42;width=106;height=47;bc=#FFCC66;pc=#000000;pw=2;"
  shape[7] = "func=rect;x=57;y=235;width=160;height=65;bc=#FFCC66;pc=#000000;pw=2;"
  shape[8] = "func=ell;x=104;y=42;width=30;height=15;bc=#FFCC66;pc=#000000;pw=2;"
  shape[9] = "func=rect;x=215;y=242;width=63;height=7;bc=#FFCC66;pc=#000000;pw=2;"
  shape[10] = "func=line;x=0;y=70;x1=0;y1=6;x2=16;y2=0;pc=#000000;pw=2;"
  shape[11] = "func=ell;x=53;y=44;width=18;height=19;bc=#FFCC66;pc=#000000;pw=2;"
  shape[12] = "func=rect;x=53;y=44;width=18;height=9;bc=#FFCC66;pw=0;"
  shape[13] = "func=line;x=61;y=62;x1=0;y1=0;x2=0;y2=7;pc=#000000;pw=2;"
  shape[14] = "func=line;x=50;y=58;x1=0;y1=5;x2=5;y2=0;pc=#000000;pw=2;"
  shape[15] = "func=line;x=67;y=59;x1=0;y1=0;x2=5;y2=5;pc=#000000;pw=2;"
  shape[16] = "func=rect;x=93;y=106;width=9;height=16;bc=#663300;pc=#000000;pw=2;"
  shape[17] = "func=rect;x=81;y=120;width=9;height=16;bc=#663300;pc=#000000;pw=2;"
  shape[18] = "func=rect;x=90;y=140;width=12;height=21;bc=#663300;pc=#000000;pw=2;"
  shape[19] = "func=rect;x=83;y=165;width=12;height=16;bc=#663300;pc=#000000;pw=2;"
  shape[20] = "func=rect;x=91;y=187;width=11;height=16;bc=#663300;pc=#000000;pw=2;"
  shape[21] = "func=rect;x=86;y=210;width=14;height=19;bc=#663300;pc=#000000;pw=2;"
  shape[22] = "func=rect;x=78;y=239;width=16;height=20;bc=#663300;pc=#000000;pw=2;"
  shape[23] = "func=rect;x=106;y=252;width=20;height=23;bc=#663300;pc=#000000;pw=2;"
  shape[24] = "func=rect;x=137;y=242;width=22;height=22;bc=#663300;pc=#000000;pw=2;"
  shape[25] = "func=rect;x=165;y=250;width=14;height=15;bc=#663300;pc=#000000;pw=2;"
  shape[26] = "func=rect;x=188;y=244;width=15;height=19;bc=#663300;pc=#000000;pw=2;"
  shape[27] = "func=rect;x=79;y=11;width=8;height=32;bc=#663300;pc=#000000;pw=2;"
  shape[28] = "func=rect;x=96;y=12;width=7;height=30;bc=#663300;pc=#000000;pw=2;"
  shape[29] = "func=ell;x=75;y=0;width=15;height=15;bc=#663300;pc=#000000;pw=2;"
  shape[30] = "func=ell;x=93;y=1;width=13;height=13;bc=#663300;pc=#000000;pw=2;"
EndSub

Sub Shapes_Add
  ' Shapes | Add shapes as shapes data
  ' param shape - array of shapes
  ' param scale - to zoom
  ' return nShapes - number of shapes
  ' return shAngle - current angle of shapes
  Stack.PushValue("local", i)
  Stack.PushValue("local", x)
  Stack.PushValue("local", y)
  nShapes = Array.GetItemCount(shape)
  s = scale
  For i = 1 To nShapes
    GraphicsWindow.PenWidth = shape[i]["pw"] * s
    If shape[i]["pw"] > 0 Then
      GraphicsWindow.PenColor = shape[i]["pc"]
    EndIf
    If shape[i]["func"] = "rect" Then
      GraphicsWindow.BrushColor = shape[i]["bc"]
      x = shape[i]["x"]
      y = shape[i]["y"]
      width = shape[i]["width"]
      height = shape[i]["height"]
      shape[i]["obj"] = Shapes.AddRectangle(width * s, height * s)
      Shapes.Move(shape[i]["obj"], shX + x * s, shY + y * s)
      If shape[i]["angle"] <> 0 Then
        Shapes.Rotate(shape[i]["obj"], shape[i]["angle"])
      EndIf
    ElseIf shape[i]["func"] = "ell" Then
      GraphicsWindow.BrushColor = shape[i]["bc"]
      x = shape[i]["x"]
      y = shape[i]["y"]
      width = shape[i]["width"]
      height = shape[i]["height"]
      shape[i]["obj"] = Shapes.AddEllipse(width * s, height * s)
      Shapes.Move(shape[i]["obj"], shX + x * s, shY + y * s)
      If shape[i]["angle"] <> 0 Then
        Shapes.Rotate(shape[i]["obj"], shape[i]["angle"])
      EndIf
    ElseIf shape[i]["func"] = "tri" Then
      GraphicsWindow.BrushColor = shape[i]["bc"]
      x = shape[i]["x"]
      y = shape[i]["y"]
      x1 = shape[i]["x1"]
      y1 = shape[i]["y1"]
      x2 = shape[i]["x2"]
      y2 = shape[i]["y2"]
      x3 = shape[i]["x3"]
      y3 = shape[i]["y3"]
      shape[i]["obj"] = Shapes.AddTriangle(x1 * s, y1 * s, x2 * s, y2 * s, x3 * s, y3 * s)
      Shapes.Move(shape[i]["obj"], shX + x * s, shY + y * s)
      If shape[i]["angle"] <> 0 Then
        Shapes.Rotate(shape[i]["obj"], shape[i]["angle"])
      EndIf
    ElseIf shape[i]["func"] = "line" Then
      x = shape[i]["x"]
      y = shape[i]["y"]
      x1 = shape[i]["x1"]
      y1 = shape[i]["y1"]
      x2 = shape[i]["x2"]
      y2 = shape[i]["y2"]
      shape[i]["obj"] = Shapes.AddLine(x1 * s, y1 * s, x2 * s, y2 * s)
      Shapes.Move(shape[i]["obj"], shX + x * s, shY + y * s)
    ElseIf shape[i]["func"] = "text" Then
      GraphicsWindow.BrushColor = shape[i]["bc"]
      x = shape[i]["x"]
      y = shape[i]["y"]
      txt = shape[i]["text"]
      shape[i]["obj"] = Shapes.AddText(txt)
      Shapes.Move(shape[i]["obj"], shX + x * s, shY + y * s)
    EndIf
    If shape[i]["sx"] <> "" Then
      Shapes.Zoom(shape[i]["obj"], shape[i]["sx"], shape[i]["sy"])
    EndIf
    shape[i]["rx"] = x
    shape[i]["ry"] = y
  EndFor
  shAngle = 0
  y = Stack.PopValue("local")
  x = Stack.PopValue("local")
  i = Stack.PopValue("local")
EndSub
