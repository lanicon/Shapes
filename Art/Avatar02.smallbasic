' 2012/09/18 Modified by Nonki Takahashi.
' 2012/09/18 13:42:41 Generated by Shapes 1.12
' 2012/09/08 10:32:47 Generated by Shapes Editor 0.3
'
' initialize shapes
Shapes_Init()
' add shapes
scale = 1
Shapes_Add()
angle = 0

Sub Shapes_Init
  ' Shapes | Initialize shapes data
  ' return shX, shY - current position of shapes
  ' return shape - array of shapes
  shX = 210 ' x offset
  shY = 100 ' y offset
  shape = ""
  shape[1] = "func=ell;x=0;y=136;width=26;height=64;bc=#CC9966;pc=#000000;pw=2;"
  shape[2] = "func=ell;x=222;y=129;width=24;height=74;bc=#CC9966;pc=#000000;pw=2;"
  shape[3] = "func=ell;x=15;y=1;width=215;height=307;bc=#CC9966;pc=#000000;pw=2;"
  shape[4] = "func=rect;x=117;y=110;width=10;height=115;bc=#CC9966;pc=#000000;pw=2;"
  shape[5] = "func=line;x=44;y=73;x1=0;y1=17;x2=60;y2=0;pc=#000000;pw=2;"
  shape[6] = "func=line;x=142;y=73;x1=0;y1=0;x2=62;y2=18;pc=#000000;pw=2;"
  shape[7] = "func=ell;x=52;y=126;width=19;height=45;bc=#000000;pc=#000000;pw=2;"
  shape[8] = "func=ell;x=184;y=121;width=21;height=49;bc=#000000;pc=#000000;pw=2;"
  shape[9] = "func=ell;x=77;y=242;width=95;height=37;bc=#660000;pc=#000000;pw=2;"
  shape[10] = "func=rect;x=113;y=243;width=23;height=16;bc=#FFFFFF;pc=#000000;pw=2;"
  shape[11] = "func=tri;x=120;y=0;x1=13;y1=0;x2=0;y2=49;x3=27;y3=49;angle=180;bc=#331A00;pc=#000000;pw=2;"
  shape[12] = "func=tri;x=92;y=1;x1=13;y1=0;x2=0;y2=49;x3=26;y3=49;angle=180;bc=#331A00;pc=#000000;pw=2;"
  shape[13] = "func=tri;x=149;y=7;x1=10;y1=0;x2=0;y2=44;x3=20;y3=44;angle=180;bc=#331A00;pc=#000000;pw=2;"
  shape[14] = "func=tri;x=75;y=6;x1=9;y1=0;x2=0;y2=47;x3=18;y3=47;angle=180;bc=#331A00;pc=#000000;pw=2;"
  shape[15] = "func=tri;x=171;y=17;x1=9;y1=0;x2=0;y2=37;x3=19;y3=37;angle=180;bc=#331A00;pc=#000000;pw=2;"
  shape[16] = "func=tri;x=56;y=18;x1=11;y1=0;x2=0;y2=39;x3=22;y3=39;angle=180;bc=#331A00;pc=#000000;pw=2;"
  shape[17] = "func=tri;x=39;y=32;x1=9;y1=0;x2=0;y2=41;x3=18;y3=41;angle=180;bc=#331A00;pc=#000000;pw=2;"
  shape[18] = "func=tri;x=188;y=33;x1=9;y1=0;x2=0;y2=30;x3=19;y3=30;angle=180;bc=#331A00;pc=#000000;pw=2;"
  shape[19] = "func=tri;x=22;y=51;x1=10;y1=0;x2=0;y2=51;x3=21;y3=51;angle=180;bc=#331A00;pc=#000000;pw=2;"
  shape[20] = "func=tri;x=203;y=53;x1=9;y1=0;x2=0;y2=40;x3=19;y3=40;angle=180;bc=#331A00;pc=#000000;pw=2;"
  shape[21] = "func=tri;x=1;y=84;x1=13;y1=0;x2=0;y2=71;x3=27;y3=71;angle=180;bc=#331A00;pc=#000000;pw=2;"
  shape[22] = "func=tri;x=215;y=82;x1=9;y1=0;x2=0;y2=70;x3=18;y3=70;angle=180;bc=#331A00;pc=#000000;pw=2;"
EndSub

Sub Shapes_Add
  ' Shapes | Add shapes as shapes data
  ' param shape - array of shapes
  ' param scale - to zoom
  ' return nShapes - number of shapes
  ' return shAngle - current angle of shapes
  Stack.PushValue("local", i)
  Stack.PushValue("local", x)
  Stack.PushValue("local", y)
  nShapes = Array.GetItemCount(shape)
  s = scale
  For i = 1 To nShapes
    GraphicsWindow.PenWidth = shape[i]["pw"] * s
    If shape[i]["pw"] > 0 Then
      GraphicsWindow.PenColor = shape[i]["pc"]
    EndIf
    If shape[i]["func"] = "rect" Then
      GraphicsWindow.BrushColor = shape[i]["bc"]
      x = shape[i]["x"]
      y = shape[i]["y"]
      width = shape[i]["width"]
      height = shape[i]["height"]
      shape[i]["obj"] = Shapes.AddRectangle(width * s, height * s)
      Shapes.Move(shape[i]["obj"], shX + x * s, shY + y * s)
      If shape[i]["angle"] <> 0 Then
        Shapes.Rotate(shape[i]["obj"], shape[i]["angle"])
      EndIf
    ElseIf shape[i]["func"] = "ell" Then
      GraphicsWindow.BrushColor = shape[i]["bc"]
      x = shape[i]["x"]
      y = shape[i]["y"]
      width = shape[i]["width"]
      height = shape[i]["height"]
      shape[i]["obj"] = Shapes.AddEllipse(width * s, height * s)
      Shapes.Move(shape[i]["obj"], shX + x * s, shY + y * s)
      If shape[i]["angle"] <> 0 Then
        Shapes.Rotate(shape[i]["obj"], shape[i]["angle"])
      EndIf
    ElseIf shape[i]["func"] = "tri" Then
      GraphicsWindow.BrushColor = shape[i]["bc"]
      x = shape[i]["x"]
      y = shape[i]["y"]
      x1 = shape[i]["x1"]
      y1 = shape[i]["y1"]
      x2 = shape[i]["x2"]
      y2 = shape[i]["y2"]
      x3 = shape[i]["x3"]
      y3 = shape[i]["y3"]
      shape[i]["obj"] = Shapes.AddTriangle(x1 * s, y1 * s, x2 * s, y2 * s, x3 * s, y3 * s)
      Shapes.Move(shape[i]["obj"], shX + x * s, shY + y * s)
      If shape[i]["angle"] <> 0 Then
        Shapes.Rotate(shape[i]["obj"], shape[i]["angle"])
      EndIf
    ElseIf shape[i]["func"] = "line" Then
      x = shape[i]["x"]
      y = shape[i]["y"]
      x1 = shape[i]["x1"]
      y1 = shape[i]["y1"]
      x2 = shape[i]["x2"]
      y2 = shape[i]["y2"]
      shape[i]["obj"] = Shapes.AddLine(x1 * s, y1 * s, x2 * s, y2 * s)
      Shapes.Move(shape[i]["obj"], shX + x * s, shY + y * s)
    EndIf
    shape[i]["rx"] = x
    shape[i]["ry"] = y
  EndFor
  shAngle = 0
  y = Stack.PopValue("local")
  x = Stack.PopValue("local")
  i = Stack.PopValue("local")
EndSub
