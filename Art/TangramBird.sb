' 2012/09/19 19:53:36 Generated
' by Shapes 1.12
'
' initialize shapes
Shapes_Init()
' add shapes
scale = 1
Shapes_Add()
angle = 0

Sub Shapes_Init
  ' Shapes | Initialize shapes data
  ' return shX, shY - current position of shapes
  ' return shape - array of shapes
  shX = 131 ' x offset
  shY = 50 ' y offset
  shape = ""
  shape[1] = "func=rect;x=109;y=127;width=200;height=200;angle=45;bc=#808080;pw=0;"
  shape[2] = "func=tri;x=0;y=166;x1=100;y1=0;x2=0;y2=100;x3=200;y3=100;angle=315;bc=#224DB9;pw=0;"
  shape[3] = "func=tri;x=215;y=165;x1=100;y1=0;x2=0;y2=100;x3=200;y3=100;angle=45;bc=#1A8E1C;pw=0;"
  shape[4] = "func=rect;x=173;y=193;width=70;height=70;angle=45;bc=#8121B5;pw=0;"
  shape[5] = "func=tri;x=167;y=137;x1=50;y1=0;x2=0;y2=50;x3=100;y3=50;angle=134;bc=#E364B6;pw=0;"
  shape[6] = "func=tri;x=161;y=82;x1=50;y1=0;x2=0;y2=50;x3=100;y3=50;angle=90;bc=#C30E0E;pw=0;"
  shape[7] = "func=tri;x=160;y=31;x1=50;y1=0;x2=0;y2=50;x3=100;y3=50;angle=270;bc=#C30E0E;pw=0;"
  shape[8] = "func=tri;x=131;y=0;x1=50;y1=0;x2=0;y2=50;x3=100;y3=50;angle=315;bc=#F0C433;pw=0;"
  shape[9] = "func=tri;x=137;y=277;x1=70;y1=0;x2=0;y2=70;x3=140;y3=70;angle=1;bc=#FF840A;pw=0;"
EndSub

Sub Shapes_Add
  ' Shapes | Add shapes as shapes data
  ' param shape - array of shapes
  ' param scale - to zoom
  ' return nShapes - number of shapes
  ' return shAngle - current angle of shapes
  Stack.PushValue("local", i)
  Stack.PushValue("local", x)
  Stack.PushValue("local", y)
  nShapes = Array.GetItemCount(shape)
  s = scale
  For i = 1 To nShapes
    GraphicsWindow.PenWidth = shape[i]["pw"] * s
    If shape[i]["pw"] > 0 Then
      GraphicsWindow.PenColor = shape[i]["pc"]
    EndIf
    If shape[i]["func"] = "rect" Then
      GraphicsWindow.BrushColor = shape[i]["bc"]
      x = shape[i]["x"]
      y = shape[i]["y"]
      width = shape[i]["width"]
      height = shape[i]["height"]
      shape[i]["obj"] = Shapes.AddRectangle(width * s, height * s)
      Shapes.Move(shape[i]["obj"], shX + x * s, shY + y * s)
      If shape[i]["angle"] <> 0 Then
        Shapes.Rotate(shape[i]["obj"], shape[i]["angle"])
      EndIf
    ElseIf shape[i]["func"] = "ell" Then
      GraphicsWindow.BrushColor = shape[i]["bc"]
      x = shape[i]["x"]
      y = shape[i]["y"]
      width = shape[i]["width"]
      height = shape[i]["height"]
      shape[i]["obj"] = Shapes.AddEllipse(width * s, height * s)
      Shapes.Move(shape[i]["obj"], shX + x * s, shY + y * s)
      If shape[i]["angle"] <> 0 Then
        Shapes.Rotate(shape[i]["obj"], shape[i]["angle"])
      EndIf
    ElseIf shape[i]["func"] = "tri" Then
      GraphicsWindow.BrushColor = shape[i]["bc"]
      x = shape[i]["x"]
      y = shape[i]["y"]
      x1 = shape[i]["x1"]
      y1 = shape[i]["y1"]
      x2 = shape[i]["x2"]
      y2 = shape[i]["y2"]
      x3 = shape[i]["x3"]
      y3 = shape[i]["y3"]
      shape[i]["obj"] = Shapes.AddTriangle(x1 * s, y1 * s, x2 * s, y2 * s, x3 * s, y3 * s)
      Shapes.Move(shape[i]["obj"], shX + x * s, shY + y * s)
      If shape[i]["angle"] <> 0 Then
        Shapes.Rotate(shape[i]["obj"], shape[i]["angle"])
      EndIf
    ElseIf shape[i]["func"] = "line" Then
      x = shape[i]["x"]
      y = shape[i]["y"]
      x1 = shape[i]["x1"]
      y1 = shape[i]["y1"]
      x2 = shape[i]["x2"]
      y2 = shape[i]["y2"]
      shape[i]["obj"] = Shapes.AddLine(x1 * s, y1 * s, x2 * s, y2 * s)
      Shapes.Move(shape[i]["obj"], shX + x * s, shY + y * s)
    EndIf
    shape[i]["rx"] = x
    shape[i]["ry"] = y
  EndFor
  shAngle = 0
  y = Stack.PopValue("local")
  x = Stack.PopValue("local")
  i = Stack.PopValue("local")
EndSub
